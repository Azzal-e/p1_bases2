-- Eliminar tablas
BEGIN
  BEGIN EXECUTE IMMEDIATE 'DROP TABLE transferencia CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'DROP TABLE operacionefectiva CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'DROP TABLE operacion CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'DROP TABLE cuentacorriente CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'DROP TABLE cuentaahorro CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'DROP TABLE cuenta CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'DROP TABLE cliente CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'DROP TABLE oficina CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
END;
/

-- Oficina
CREATE TABLE oficina OF OFICINAUDT (
  CONSTRAINT pk_oficina PRIMARY KEY (codigoOficina),
  CONSTRAINT chk_telefono_oficina CHECK (tel.VALOR LIKE '+%')
);

-- Cliente
CREATE TABLE cliente OF CLIENTEUDT (
  PRIMARY KEY (dni_val.VALOR), 
  CONSTRAINT chk_telefono_cliente CHECK (tel.VALOR LIKE '+%'),
  CONSTRAINT chk_email_cliente CHECK (REGEXP_LIKE(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$'))
);

-- Cuenta
CREATE TABLE cuenta OF CUENTAUDT (
  CONSTRAINT pk_cuenta PRIMARY KEY (cuenta_iban.PREFIJOIBAN, cuenta_iban.NUMEROCUENTA)
);

-- Cuenta corriente
CREATE TABLE cuentacorriente OF CUENTACORRIENTEUDT;

-- Cuenta de ahorro
CREATE TABLE cuentaahorro OF CUENTAAHORROUDT;

-- Operacion
CREATE TABLE operacion OF OPERACIONUDT (
  CONSTRAINT pk_operacion PRIMARY KEY (codigo)
);

-- Operacion Efectiva
CREATE TABLE operacionefectiva OF OPERACIONEFECTIVAUDT;

-- Operacion Transferencia
CREATE TABLE transferencia OF TRANSFERENCIAUDT;
